import React, { useState } from "react";
import "./ProductCard.scss";

import defaultImage from "/assets/images/product.png";
import FavoriteButton from "../FavoriteButton";
import { addToFavorites, removeFromFavorites } from "../../services/api";

const ProductCard = ({ id, image, price, title, discount }) => {
  const [isFavorite, setIsFavorite] = useState(false);
  const [isInCart, setIsInCart] = useState(false);
  const [quantity, setQuantity] = useState(1);

  // üìå –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ"
  const handleToggleFavorite = () => {
    const payload = {
      userId: 1,             // üîß –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–æ (–ø–æ–∑–∂–µ –≤–æ–∑—å–º—ë–º –∏–∑ auth)
      resourceId: id,        // id —Ç–æ–≤–∞—Ä–∞
      type: "product",       // —Ç–∏–ø —Å—É—â–Ω–æ—Å—Ç–∏
    };

    if (!isFavorite) {
      addToFavorites(payload)
        .then(() => {
          setIsFavorite(true);
          console.log("‚ù§Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ");
        })
        .catch((err) => {
          console.error("–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:", err);
        });
    } else {
      removeFromFavorites(payload)
        .then(() => {
          setIsFavorite(false);
          console.log("üíî –£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ");
        })
        .catch((err) => {
          console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:", err);
        });
    }
  };

  const handleAddToCart = () => {
    setIsInCart(true);
  };

  const handleIncrement = () => {
    setQuantity(prev => prev + 1);
  };

  const handleDecrement = () => {
    if (quantity > 1) {
      setQuantity(prev => prev - 1);
    } else {
      setIsInCart(false);
      setQuantity(1);
    }
  };

  return (
    <div className="product-card">
      {/* üì∑ –ö–∞—Ä—Ç–∏–Ω–∫–∞ –∏ —Å–∫–∏–¥–∫–∞ */}
      <div
        className="product-image"
        style={{ backgroundImage: `url(${image || defaultImage})` }}
      >
        {discount && <span className="discount-badge">-{discount}%</span>}
      </div>

      {/* üí∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="product-info">
        <p className="price">{price} —Ä—É–±</p>
        <p className="title">{title}</p>
      </div>

      {/* üîò –ö–Ω–æ–ø–∫–∏ */}
      <div className="product-buttons">
        <FavoriteButton isFavorite={isFavorite} onClick={handleToggleFavorite} />
        {!isInCart ? (
          <button className="cart-btn" onClick={handleAddToCart}>–í –∫–æ—Ä–∑–∏–Ω—É</button>
        ) : (
          <div className="quantity-controls">
            <button className="quantity-btn" onClick={handleDecrement}>‚àí</button>
            <span className="quantity">{quantity}</span>
            <button className="quantity-btn" onClick={handleIncrement}>+</button>
          </div>
        )}
      </div>
    </div>
  );
};

export default ProductCard;
